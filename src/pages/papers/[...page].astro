---
import type { GetStaticPathsOptions, Page } from 'astro';
import { type CollectionEntry, getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import Pagination from '../../components/Pagination.astro';
import PaperCard from '../../components/PaperCard.astro';
import siteConfig from '../../data/site-config';

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
    const papers = (await getCollection('papers')).sort((a, b) => {
        const pa = a.data.priority ?? null;
        const pb = b.data.priority ?? null;
        if (pa !== null || pb !== null) {
            // larger priority first
            return (pb ?? -Infinity) - (pa ?? -Infinity);
        }
        // fallback to year desc
        const ya = a.data.year ?? -Infinity;
        const yb = b.data.year ?? -Infinity;
        if (yb !== ya) return yb - ya;
    // final stable fallback: sort by slug, id, or title text â€” ensure strings to avoid undefined.localeCompare
    const sa = a.slug ?? a.id ?? (typeof a.data.title === 'string' ? a.data.title : (a.data.title && a.data.title.text) ? a.data.title.text : '');
    const sb = b.slug ?? b.id ?? (typeof b.data.title === 'string' ? b.data.title : (b.data.title && b.data.title.text) ? b.data.title.text : '');
    return String(sa).localeCompare(String(sb));
    });
    return paginate(papers, { pageSize: siteConfig.papersPerPage || 6 });
}

type Props = { page: Page<CollectionEntry<'papers'>> };

const { page } = Astro.props;
const papers = page.data;
---

<BaseLayout
    title="Papers"
    description="Academic publications and research papers from Foundation Agents"
    showHeader={false}
>
    <div class="mb-12">
        <h1 class="mb-6 text-2xl leading-tight font-serif italic sm:mb-8 sm:text-4xl">Paper List</h1>

        </p>
    </div>

    <div class="space-y-8">
        {papers.map((paper) => (
            <PaperCard paper={paper} />
        ))}
    </div>

    <Pagination page={page} class="my-16 sm:my-24" />

</BaseLayout>
